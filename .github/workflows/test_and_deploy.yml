name: Node.js test and deploy to github pages

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

env:
  CI: false

jobs:
  build_wasm:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Test submodule checkout
      run: |
        ls -al
        ls -al libdedx

    - uses: mymindstorm/setup-emsdk@v11

    - name: Compile to wasm
      run: ./build_wasm.sh

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: wasm bin
        path: |
          public/weblibdedx.wasm
        if-no-files-found: error
        retention-days: 5

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: wasm js
        path: |
          src/Backend/weblibdedx.js
        if-no-files-found: error
        retention-days: 5

  build:

    runs-on: ubuntu-latest
    needs: [build_wasm]

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.4.1
      with:
        node-version: ${{ matrix.node-version }}

    - uses: actions/download-artifact@v3
      with:
        name: wasm bin
        path: public
   
    - uses: actions/download-artifact@v3
      with:
        name: wasm js
        path: src/Backend

    - name: Test downloaded file structure
      run: |
        ls -al ./public
        ls -al ./src/Backend
        
    - run: npm ci
    
    - run: npm run build --if-present
    
    - run: npm test


  test_and_deploy:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install üîß 
        run: npm install

      - name: webfactory/ssh-agent
        if: github.ref == 'refs/heads/master'
        # You may pin to the exact commit or the version.
        # uses: webfactory/ssh-agent@5f066a372ec13036ab7cb9a8adf18c936f8d2043
        uses: webfactory/ssh-agent@v0.5.4
        with:
          # Private SSH key to register in the SSH agent
          ssh-private-key: ${{ secrets.WEBDEV }}

      - uses: actions/download-artifact@v3
        with:
          name: wasm bin
          path: public

      - uses: actions/download-artifact@v3
        with:
          name: wasm js
          path: src/Backend

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        run: |
          git remote set-url origin git@github.com:APTG/web_dev.git
          npm run deploy -- -u "github-actions-bot <support+actions@github.com>" -r "git@github.com:APTG/web_dev.git"
        env:
          REACT_APP_HOST_ENV: web_dev

      - name: webfactory/ssh-agent
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        # You may pin to the exact commit or the version.
        # uses: webfactory/ssh-agent@5f066a372ec13036ab7cb9a8adf18c936f8d2043
        uses: webfactory/ssh-agent@v0.5.4
        with:
          # Private SSH key to register in the SSH agent
          ssh-private-key: ${{ secrets.WEBPROD }}

      - name: Deploy Prod
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        run: |
          git remote set-url origin git@github.com:APTG/web.git
          npm run deploy -- -u "github-actions-bot <support+actions@github.com>" -r "git@github.com:APTG/web.git"
        env:
          REACT_APP_HOST_ENV: web
